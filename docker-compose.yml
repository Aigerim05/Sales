services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "5173:5173"
    volumes:
      - ./frontend:/app
      - frontend_node_modules:/app/node_modules
    environment:
      - NODE_ENV=development
      - VITE_HOST=0.0.0.0
      - VITE_API_URL=http://backend:8000
    command: npm run dev
    stdin_open: true
    tty: true
    networks:
      - sales_network
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
   
    environment:
      - DEBUG=1
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    networks:
      - sales_network
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5431:5432"
    environment:
      POSTGRES_USER: personal
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: sales_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U personal -d sales_db"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - sales_network

volumes:
  postgres_data: {}
  frontend_node_modules: {}

networks:
  sales_network:
    driver: bridge
